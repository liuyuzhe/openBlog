/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.3/userguide/tutorial_java_projects.html
 */

apply plugin: 'war'
apply plugin: 'eclipse-wtp'
apply plugin: 'idea'

buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven { url 'http://oss.jfrog.org/artifactory/oss-snapshot-local' }
    }
    dependencies {
        classpath 'org.akhikhl.gretty:gretty:+'
    }
}
apply plugin: 'org.akhikhl.gretty'

// JDK版本
sourceCompatibility = 1.8 
targetCompatibility = 1.8

archivesBaseName = 'blog' // 包名
project.webAppDirName = "src/main/webapp" // webApp目录
version = '1.0.0' // 版本
	
// 解决编译时警告：编码GBK的不可映射字符
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

// 全局参数配置
ext {
	servletVersion = '2.5'
    freemarkerVersion = '2.3.26-incubating'
	jspVersion = '2.2'
	jstlVersion = '1.2'

	springVersion = '4.3.3.RELEASE'
    fileuploadVersion = '1.3.2'
	mybatisVersion = '3.4.0'
	mybatisSpringVersion = '1.3.0'
	mysqlVersion = '5.1.38'
    dbcpVersion = '1.4'

    logbackVersion = '1.1.3'
    logbackSpringVersion = '0.1.2' //
    slf4jVersion = '1.7.12' // 把Spring源代码中大量使用到的commons-logging替换成slf4j

	fastJsonVersion = '1.2.4'
    commonmarkVersion = '0.9.0'
	collectionVersion = '4.0'

	junitVersion = '4.12'
}

// 依赖的仓库
repositories {
    // 使用本地目录,相对当前文件路径
    flatDir {
        dirs './javeWeb/localLib'
    }
    mavenLocal() // 使用本地缓存
    maven{ url "http://maven.aliyun.com/nexus/content/groups/public"}    
    mavenCentral() // 使用中央仓库
    jcenter()
}

// 依赖的插件
dependencies {
	// 使用本项目libs目录
    compile fileTree(dir: 'libs', include: ['*.jar'])
	
    // Servlet web
	providedCompile "javax.servlet:servlet-api:${servletVersion}"
//	providedCompile "javax.servlet.jsp:jsp-api:${jspVersion}"
//	providedCompile "javax.servlet:jstl:${jstlVersion}"

    // velocity
    compile "org.freemarker:freemarker:${freemarkerVersion}"
    compile "org.springframework:spring-context-support:${springVersion}"

    // Spring web
    compile "org.springframework:spring-web:${springVersion}"
    compile "org.springframework:spring-webmvc:${springVersion}"
    compile "commons-fileupload:commons-fileupload:${fileuploadVersion}"

    // Spring DAO
    compile "org.springframework:spring-jdbc:${springVersion}"
    compile "org.springframework:spring-tx:${springVersion}"
    
    // MyBatis
    compile "org.mybatis:mybatis:${mybatisVersion}"
    compile "org.mybatis:mybatis-spring:${mybatisSpringVersion}"

    // mysql
    compile "mysql:mysql-connector-java:${mysqlVersion}"
    compile "commons-dbcp:commons-dbcp:${dbcpVersion}"

    // Logback
    compile "ch.qos.logback:logback-classic:${logbackVersion}"
    compile "org.logback-extensions:logback-ext-spring:${logbackSpringVersion}"
    compile "org.slf4j:jcl-over-slf4j:${slf4jVersion}"

    // json
    compile "com.alibaba:fastjson:${fastJsonVersion}"

    // markdown
    compile "com.atlassian.commonmark:commonmark:${commonmarkVersion}"
    compile "com.atlassian.commonmark:commonmark-ext-gfm-tables:${commonmarkVersion}"

    // utility
    compile "org.apache.commons:commons-collections4:${collectionVersion}"

    // test
    testCompile "junit:junit:${junitVersion}"
}

gretty {
    httpPort = 8080
    servletContainer = 'tomcat7'
    contextPath = ''
    scanInterval 1
    debugPort = 5050
    debugSuspend = true
}

